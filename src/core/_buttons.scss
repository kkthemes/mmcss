@mixin button-modifiers($map, $prefix: "-", $separator: "-", $base: "base") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include button-modifiers($value, $separator);
      } @else {
        background-color: $value;
        border-color: $value;

        &:focus,
        &:hover {
          background-color: darken($value, $color-darkness);
          border-color: darken($value, $color-darkness);
        }
      }
    }
  }
}

.button {
  background-color: $color-background-dark;
  border: 1px solid $color-background-dark;
  border-radius: $size-default-radius;
  box-sizing: border-box;
  color: $color-white;
  cursor: pointer;
  display: inline-block;
  font-weight: $font-weight-normal;
  line-height: 1.5;
  padding: 0.3em 1em;
  white-space: normal;
  text-align: center;
  text-decoration: none;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,
    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

  &:focus,
  &:hover {
    background-color: darken($color-background-dark, $color-darkness);
    border-color: darken($color-background-dark, $color-darkness);
    color: $color-white;
    text-decoration: none;
    outline: 0;
  }

  &[disabled],
  &:disabled {
    cursor: default;
    opacity: 0.5;
    pointer-events: none;
  }

  @include button-modifiers($colors);
}

.button-light,
.button-gray-light,
.button-gray {
  color: $color-text;

  &:focus,
  &:hover {
    color: $color-text;
  }
}
