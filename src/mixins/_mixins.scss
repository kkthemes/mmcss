@mixin element-spacing($scale: 1) {
  // default margin (scale = 1) only specifies top margin for any element
  // When scale > 1, extra margin is distributed to top and bottom margin.
  margin: (((1 + $scale) / 2) * $size-element-spacing) 0
    (
       (($scale - 1) / 2) * $size-element-spacing
    ) 0;
}
// Rem output with px fallback
@mixin font-size($sizeValue: 1, $unit: "rem") {
  font-size: ($sizeValue * 16) * 1px;

  @if $unit == "em" {
    font-size: $sizeValue * 1em;
  } @else {
    font-size: $sizeValue * 1rem;
  }
}

@mixin container($max-width) {
  box-sizing: border-box;
  margin-left: auto;
  margin-right: auto;
  max-width: $max-width;
  width: 100%;

  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

@mixin modifiers($map, $attribute, $prefix: "-", $separator: "-", $base: "base") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers($value, $attribute, $separator);
      } @else {
        #{$attribute}: $value;
      }
    }
  }
}

@mixin multi-modifiers($map, $attribute-list, $prefix: "-", $separator: "-", $base: "base") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers($value, $attribute-list, $separator);
      } @else {
        @each $attribute in $attribute-list {
          #{$attribute}: $value;
        }
      }
    }
  }
}

// screen-sm or mobile
@mixin screen-sm {
  @media only screen and (max-width: $screen-sm) {
    @content;
  }
}

@mixin mobile {
  @media only screen and (max-width: $screen-sm) {
    @content;
  }
}

// screen-md or tablet
@mixin screen-md {
  @media only screen and (max-width: $screen-md) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (max-width: $screen-md) {
    @content;
  }
}

// screen-lg or desktop
@mixin screen-lg {
  @media only screen and (min-width: ($screen-md + 1)) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: ($screen-md + 1)) {
    @content;
  }
}
